version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: slack_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-slack_events}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - slack_network

  slack-bot:
    build: .
    container_name: slack_event_manager
    environment:
      # Secrets from host .env (will be prompted if missing)
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:?SLACK_BOT_TOKEN must be set}
      OPENAI_API_KEY: ${OPENAI_API_KEY:?OPENAI_API_KEY must be set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}
      # Telegram API credentials (optional)
      TELEGRAM_API_ID: ${TELEGRAM_API_ID:-}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH:-}
      # Database configuration for Docker
      DATABASE_TYPE: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-slack_events}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    command: python scripts/run_pipeline.py --interval-seconds 3600
    healthcheck:
      test: ["CMD", "python", "-c", "from src.config.settings import get_settings; get_settings(); print('OK')"]
      interval: 5m
      timeout: 10s
      retries: 3
    networks:
      - slack_network

  streamlit-ui:
    build: .
    container_name: slack_streamlit
    environment:
      # Secrets from host .env
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:?SLACK_BOT_TOKEN must be set}
      OPENAI_API_KEY: ${OPENAI_API_KEY:?OPENAI_API_KEY must be set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}
      # Telegram API credentials (optional)
      TELEGRAM_API_ID: ${TELEGRAM_API_ID:-}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH:-}
      # Database configuration for Docker
      DATABASE_TYPE: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-slack_events}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      slack-bot:
        condition: service_started
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs:ro
      - ./config:/app/config
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - slack_network

volumes:
  postgres_data:

networks:
  slack_network:
    driver: bridge
